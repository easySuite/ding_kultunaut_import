<?php

/**
 * @file
 * Module installing and uninstalling handlers.
 */

/**
 * Implements hook_schema().
 */
function ding_kultunaut_import_schema() {
  $schema['imported_events'] = array(
    'fields' => array(
      'relid' => array(
        'type' => 'serial',
        'description' => 'Relation identificator.',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'type' => 'int',
        'description' => 'Created node identificator.',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'eid' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => 'Event ID received from "eventid" field of XML feed.',
        'default' => '',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('relid'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function ding_kultunaut_import_install() {
  variable_set('ding_kultunaut_import_url', 'http://www.kultunaut.dk/perl/export/kulturoeenxml?version=full');
}

/**
 * Implements hook_uninstall().
 */
function ding_kultunaut_import_uninstall() {
  variable_del('ding_kultunaut_import_url');
}

/**
 * Expands the size of imported node identifier field.
 */
function ding_kultunaut_import_update_7001() {
  db_change_field('imported_events', 'eid', 'eid', array(
    'type' => 'varchar',
    'length' => 255,
    'description' => 'Event ID received from "eventid" field of XML feed.',
    'default' => '',
    'not null' => TRUE,
  ));
}

/**
 * Cleanup broken nodes.
 */
function ding_kultunaut_import_update_7002() {
  $nids = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('type', 'ding_event')
    ->execute()
    ->fetchAllAssoc('nid');

  $nids = array_reverse($nids, TRUE);

  $to_be_removed = [];
  foreach ($nids as $key => $nid) {
    $node = node_load($key);

    if ($node == FALSE) {
      $to_be_removed[] = $key;
    }
  }

  foreach ($to_be_removed as $item) {
    node_delete($item);
  }
}

/**
 * Remove imported events without ticket link saved.
 */
function ding_kultunaut_import_update_7003() {
  // Delete broken node which is breaking cron execution.
  $check_broken_library = db_select('node', 'n')
    ->fields('n', ['nid'])
    ->condition('title', 'Andre aktÃ¸rer')
    ->condition('language', '')
    ->condition('uid', 0)
    ->execute()
    ->fetchColumn();

  if (!empty($check_broken_library)) {
    node_delete($check_broken_library);
  }

  // Find all imported events without ticket link.
  $select = db_select('node', 'n')
    ->fields('n', ['nid']);
  $select->join('field_data_field_ding_event_date', 'ded', 'ded.entity_id=n.nid');
  $select->join('imported_events', 'ie', 'ie.nid=n.nid');
  $select->join('field_data_field_ding_event_ticket_link', 'tl', 'tl.entity_id=n.nid');
  $select->condition('n.type', 'ding_event');
  $select->condition('tl.field_ding_event_ticket_link_url', '');
  $select->condition('ded.field_ding_event_date_value', date('Y-m-d') . ' 00:00:00', '>=');
  $exec = $select->execute();
  $results = $exec->fetchAllAssoc('nid');

  $nodes_for_deletion = [];
  foreach ($results as $result) {
    $nodes_for_deletion[] = $result->nid;
  }

  // Delete found nodes.
  node_delete_multiple($nodes_for_deletion);

  // Run cron to re-import missing nodes.
  drupal_cron_run();
}
